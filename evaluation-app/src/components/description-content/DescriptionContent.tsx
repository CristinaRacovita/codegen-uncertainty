import { Button } from '@mui/material';
import codeImage from '../../assets/explanation_code.png';
import './DescriptionContent.css';

export default function DescriptionContent() {
    return (
        <div className='main-content'>
            <div className='description-content'>
                <div className="image-content">
                    <img src={codeImage} width={400} />
                </div>
                <div className='description-text'>
                    <div className='description-title'>
                        Welcome to our Evaluation App!
                    </div>

                    In this study, we're exploring how AI-generated code explanations impact developer productivity and trust. Participants will evaluate the usefulness of added explanations for Python code generated by an AI. We've selected a medium-difficulty LeetCode problem and built an app where developers, regardless of experience level, will evaluate the usefulness of AI's line-by-line code confidence.

                    <div className='task-description'>
                        <span className='task-introduction'>Your task is simple:</span> review the generated code, with or without explanations, and submit your solution. We'll measure how long it takes, how accurate your solution is, and how much of the original code you edit. By participating, you'll help us understand if these explanations truly improve coding efficiency and accuracy.
                    </div>
                </div>
            </div>

            <div className='action-content'>
                <Button className='start-button' variant="contained" sx={{ backgroundColor: '#01adee', textTransform: 'none', fontWeight: 'bold'}}>Start With Explanations</Button>
                <Button variant="contained" sx={{ backgroundColor: '#203568', textTransform: 'none', fontWeight: 'bold'}}>Start Without Explanations</Button>
            </div>
        </div>

    );
}
